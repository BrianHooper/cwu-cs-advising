<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Database_Classes</name>
    </assembly>
    <members>
        <member name="T:Database_Object_Classes.Course">
            <summary>Class storing the name, ID, and prerequisits for a given course.</summary>
        </member>
        <member name="F:Database_Object_Classes.Course.i_NUMBERQUARTERS">
            <summary>Number of quarters per year constant.</summary>
        </member>
        <member name="F:Database_Object_Classes.Course.ui_numberCredits">
            <summary>The number of credits this course is worth.</summary>
        </member>
        <member name="F:Database_Object_Classes.Course.s_name">
            <summary>Name of this course.</summary>
        </member>
        <member name="F:Database_Object_Classes.Course.l_preRequisites">
            <summary>Prerequisites for this course.</summary>
        </member>
        <member name="F:Database_Object_Classes.Course.ba_quartersOffered">
            <summary>The quarters this course is offered, [0] = Winter, [3] = Fall.</summary>
        </member>
        <member name="M:Database_Object_Classes.Course.#ctor(System.String,System.String,System.UInt32)">
            <summary>Default Constructor. Creates a Course object with a name and ID, and sets all other fields to default.</summary>
            <param name="s_name">The course name.</param>
            <param name="s_ID">The course identifier.</param>
            <param name="ui_numberCredits">The number of credits this course is worth.</param>
            <remarks>The course name is the actual name of the course, e.g. Computer Architecture 1.
                     The course identifier is the unique identifier for this course, e.g. CS311 which must not contain spaces.</remarks>
        </member>
        <member name="M:Database_Object_Classes.Course.#ctor(System.String,System.String,System.UInt32,System.Collections.Generic.ICollection{Database_Object_Classes.Course})">
            <summary>Constructor which creates a Course object with a name, ID, and the given prerequisites.</summary>
            <param name="s_name">The course name.</param>
            <param name="s_ID">The course identifier.</param>
            <param name="ui_numberCredits">The number of credits this course is worth.</param>
            <param name="col_courses">A collection of prerequisites for this course to be added to the prerequisites list.</param>
            <remarks>The course name is the actual name of the course, e.g. Computer Architecture 1.
                     The course identifier is the unique identifier for this course, e.g. CS311 which must not contain spaces.
                     The course pre-requisites can be in any collection that implements the <see cref="T:System.Collections.Generic.ICollection`1"/> interface.</remarks>
        </member>
        <member name="M:Database_Object_Classes.Course.#ctor(System.String,System.String,System.UInt32,System.Boolean[])">
            <summary>Constructor which creates a Course object with a name, ID, and the given quarters it's offered.</summary>
            <param name="s_name">The course name.</param>
            <param name="s_ID">The course identifier.</param>
            <param name="ba_quarters">The quarters when the class is offered.</param>
            <param name="ui_numberCredits">The number of credits this course is worth.</param>
            <exception cref="T:System.ArgumentException">This exception is thrown if the ba_quarters array is not size 4.</exception>
            <remarks>The course name is the actual name of the course, e.g. Computer Architecture 1.
                     The course identifier is the unique identifier for this course, e.g. CS311 which must not contain spaces.
                     The quarters array considers [0] to be winter, and [3] to be fall. 
            </remarks>
        </member>
        <member name="M:Database_Object_Classes.Course.#ctor(System.String,System.String,System.UInt32,System.Boolean[],System.Collections.Generic.ICollection{Database_Object_Classes.Course})">
            <summary>Constructor which creates a Course object with a name, an ID, the given quarters it's offered, and the given prerequisites.</summary>
            <param name="s_name">The course name.</param>
            <param name="s_ID">The course identifier.</param>
            <param name="ui_numberCredits">The number of credits this course is worth.</param>
            <param name="ba_quarters">The quarters when the class is offered.</param>
            <param name="col_courses">A collection of prerequisites for this course to be added to the prerequisites list.</param>
            <exception cref="T:System.ArgumentException">This exception is thrown if the ba_quarters array is not size 4.</exception>
            <remarks>The course name is the actual name of the course, e.g. Computer Architecture 1.
                     The course identifier is the unique identifier for this course, e.g. CS311 which must not contain spaces.
                     The quarters array considers [0] to be winter, and [3] to be fall.
                     The course prerequisites can be in any collection that implements the <see cref="T:System.Collections.Generic.ICollection`1"/> interface.
            </remarks>
        </member>
        <member name="P:Database_Object_Classes.Course.Name">
            <summary>Getter/Setter for name of this course.</summary>
        </member>
        <member name="P:Database_Object_Classes.Course.PreRequisites">
            <summary>Getter for PreRequisites list of this course.</summary>
            <remarks>The returned collection will be a read-only collection, and may not be modified directly.</remarks>
        </member>
        <member name="P:Database_Object_Classes.Course.QuartersOffered">
            <summary>Getter for quarters offered array of this course.</summary>
        </member>
        <member name="M:Database_Object_Classes.Course.isOffered(Database_Object_Classes.Season)">
            <summary>Checks whether this course is offered in the specified quarter.</summary>
            <param name="se_i">Quarter to check.</param>
            <remarks>Quarter 0 is Winter, quarter 3 is fall.</remarks>
            <returns>True if offered, false if not offered.</returns>
        </member>
        <member name="M:Database_Object_Classes.Course.setQuarterOffered(Database_Object_Classes.Season,System.Boolean)">
            <summary>Sets a specific quarter to the given status.</summary>
            <param name="se_i">Quarter to set.</param>
            <param name="b_status">The new offering-status for this course in the specified quarter.</param>
            <remarks>Quarter 0 is Winter, quarter 3 is fall.
                     True = offered, False = not offered
                     This will change only a single quarter, to change all use <see cref="M:Database_Object_Classes.Course.setQuarterOffered(System.Boolean[])"/>.
            </remarks>
        </member>
        <member name="M:Database_Object_Classes.Course.setQuarterOffered(System.Boolean[])">
            <summary>Setter for quarters offered array of this course.</summary>
            <param name="ba_quarters">Array containing the new offering-status of this course for all quarters.</param>
            <remarks>Quarter 0 is Winter, quarter 3 is fall.
                     True = offered, False = not offered
                     All previous offerings will be overriden by this method. To change only a single quarter use <see cref="M:Database_Object_Classes.Course.setQuarterOffered(Database_Object_Classes.Season,System.Boolean)"/>.
            </remarks>
            <exception cref="T:System.ArgumentException">This exception is thrown if the ba_quarters array is not size 4.</exception>
        </member>
        <member name="M:Database_Object_Classes.Course.addPreRequisite(Database_Object_Classes.Course)">
            <summary>Adds the given Course to the prerequisites list of this Course object.</summary>
            <param name="c_course">A course prerequisites for this course to be added to the prerequisites list.</param>
        </member>
        <member name="M:Database_Object_Classes.Course.addPreRequisite(System.Collections.Generic.ICollection{Database_Object_Classes.Course})">
            <summary>Adds the given Courses to the prerequisites list of this Course object.</summary>
            <param name="col_courses">A collection of prerequisites for this course to be added to the prerequisites list.</param>
        </member>
        <member name="M:Database_Object_Classes.Course.removePreRequisite(System.String)">
            <summary>Removes the course whith the specified ID from the prerequisites of this Course object, given it exists.</summary>
            <param name="s_courseID">The ID of the course to be removed from to the prerequisites list.</param>
            <returns>True if the course was found, and successfully removed. False if it could not be removed.</returns>
        </member>
        <member name="M:Database_Object_Classes.Course.clearPreRequisites">
            <summary>Removes all prerequisites of this Course object.</summary>
        </member>
        <member name="F:Database_Object_Classes.Database_Object.ui_writeProtect">
            <summary>Write protection to maintain data integrity of this object.</summary>
        </member>
        <member name="F:Database_Object_Classes.Database_Object.s_ID">
            <summary>The unique identifier of this object.</summary>
        </member>
        <member name="P:Database_Object_Classes.Database_Object.WP">
            <summary>Getter for the write protect value of this object.</summary>
        </member>
        <member name="P:Database_Object_Classes.Database_Object.ID">
            <summary>Getter/Setter for the ID of this object. </summary>
        </member>
        <member name="M:Database_Object_Classes.Database_Object.#ctor(System.String)">
            <summary>Default Constructor. Initializes the write protect of this object to default.</summary>
        </member>
        <member name="M:Database_Object_Classes.Database_Object.objectAltered">
            <summary>Updates the value of write protect of this object.</summary>
            <remarks>If the uint.Max value is reached, the overflow will be ignored, and the write protect reset to 0.</remarks>
        </member>
        <member name="T:Database_Object_Classes.Season">
            <summary>The season when a quarter occurs (Winter, Spring, etc.).</summary>
            <remarks>Winter = 0, Spring = 1, Summer = 2, Fall = 3.</remarks>
        </member>
        <member name="T:Database_Object_Classes.Quarter">
            <summary>Structure which contains the year, and "season" of the quarter.</summary>
        </member>
        <member name="F:Database_Object_Classes.Student.s_fName">
            <summary>The first name of this student.</summary>
        </member>
        <member name="F:Database_Object_Classes.Student.s_lName">
            <summary>The last name of this student.</summary>
        </member>
        <member name="F:Database_Object_Classes.Student.q_expectedGraduation">
            <summary>The quarter this student is expected to graduate.</summary>
        </member>
        <member name="F:Database_Object_Classes.Student.ui_catalogYear">
            <summary>The catalog year of this student.</summary>
        </member>
        <member name="F:Database_Object_Classes.Student.s_startingQuarter">
            <summary>The quarter this student started at CWU. 0 = Winter, 3 = Fall.</summary>
        </member>
        <member name="M:Database_Object_Classes.Student.#ctor(System.String,System.String,System.String,Database_Object_Classes.Quarter)">
            <summary>Creates a new student object with the specified name, ID, and starting quarter.</summary>
            <param name="s_fName">First name of this student.</param>
            <param name="s_lName">Last name of this student.</param>
            <param name="s_ID">Student ID of this student.</param>
            <param name="q_start">Quarter in which this student enrolled.</param>
        </member>
    </members>
</doc>
